import threading
def load_animation(path, y,name):
    animation = Animation(path, y=y)
    globals()[name] = animation

def start_loading_animation(path, y,name=None):
    loading_thread = threading.Thread(target=load_animation, args=(path, y, name))
    loading_thread.start()

start_loading_animation('assets/textures/armstrong.gif', y=-4,name="armstrong_texture")
start_loading_animation('assets/textures/armstrong.gif', y=-4,name="armstrong_texture1")
start_loading_animation('assets/textures/phonk.gif', y=-4,name="phonk_texture")
start_loading_animation('assets/textures/phonk.gif', y=-4,name="phonk_texture1")

def gif_applier(): #Makes the double-sided gif work for the nextbots
    global ArmstrongNextbot,PhonkNextbot
    try:
        phonk_texture.position = PhonkNextbot.position
        phonk_texture.scale = PhonkNextbot.scale
        phonk_texture.rotation=PhonkNextbot.rotation
        phonk_texture1.position = PhonkNextbot.position
        phonk_texture1.scale = PhonkNextbot.scale
        phonk_texture1.rotation_y=PhonkNextbot.rotation_y - 180
    except Exception:
        pass
    try:
        armstrong_texture.position = ArmstrongNextbot.position
        armstrong_texture.scale = ArmstrongNextbot.scale
        armstrong_texture.rotation=ArmstrongNextbot.rotation
        armstrong_texture1.position = Vec3(ArmstrongNextbot.position)
        armstrong_texture1.scale = ArmstrongNextbot.scale
        armstrong_texture1.rotation_y=ArmstrongNextbot.rotation_y + 180   
    except Exception:
        pass
Entity(update=gif_applier)